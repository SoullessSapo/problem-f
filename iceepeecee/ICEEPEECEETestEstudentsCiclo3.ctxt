#BlueJ class context
comment0.target=ICEEPEECEETestEstudentsCiclo3
comment0.text=\r\n\ Write\ a\ description\ of\ class\ ICEEPEECEETestEstudentsCiclo3\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=void\ testSolveShould()
comment1.text=public\ void\ simulateShouldNot()\ {\r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ islands\ \=\ {{{300,\ 100},{100,\ 100},{100,\ 300},{300,\ 300}},\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{400,\ 500},{800,\ 500},{800,\ 700},{500,\ 700}}};\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ flights\ \=\ {{{100,\ 100,\ 100},\ {800,\ 800,\ 200}},\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{500,\ 100,\ 100},\ {500,\ 500,\ 200}}};\r\n\r\n\ \ \ \ \ \ \ \ IceepeeceeContest\ solver\ \=\ new\ IceepeeceeContest();\r\n\r\n\ \ \ \ \ \ \ \ solver.simulate(islands,\ flights);\r\n\r\n\ \ \ \ \ \ \ \ String[]\ observedIslands1\ \=\ solver.simulator.observedIslands();\r\n\r\n\ \ \ \ \ \ \ \ \r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ islands2\ \=\ {{{300,\ 100},{100,\ 100},{100,\ 300},{300,\ 300}},\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{400,\ 500},{800,\ 500},{800,\ 700},{500,\ 700}}};\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ flights2\ \=\ {{{100,\ 100,\ 100},\ {400,\ 400,\ 200}},\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{450,\ 100,\ 100},\ {450,\ 450,\ 200}}};\r\n\r\n\ \ \ \ \ \ \ \ IceepeeceeContest\ solver2\ \=\ new\ IceepeeceeContest();\r\n\r\n\ \ \ \ \ \ \ \ solver2.simulate(islands2,\ flights2);\r\n\r\n\ \ \ \ \ \ \ \ String[]\ observedIslands2\ \=\ solver2.simulator.observedIslands();\r\n\r\n\ \ \ \ \ \ \ \ assertFalse(Arrays.equals(observedIslands1,\ observedIslands2));\r\n\r\n\ \ \ \ }\r\n\r\n@Test\r\n\r\n\ \ \ \ public\ void\ simulateShould()\ {\r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ islands\ \=\ {{{20,\ 30},{50,\ 50},{10,\ 50}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{40,\ 20},{60,\ 10},{75,\ 20},{60,\ 30}},\ \ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{45,60},{55,55},{60,60},{55,65}}};\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ flights\ \=\ {{{0,\ 30,\ 20},{78,\ 70,\ 5}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{55,\ 0,\ 20},\ {10,\ 60,\ 10}}};\r\n\r\n\ \ \ \ \ \ \ \ IceepeeceeContest\ solver\ \=\ new\ IceepeeceeContest();\r\n\r\n\ \ \ \ \ \ \ \ solver.simulate(islands,\ flights);\r\n\r\n\ \ \ \ \ \ \ \ String[]\ observedIslands1\ \=\ solver.simulator.observedIslands();\r\n\r\n\ \ \ \ \ \ \ \ \r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ islands2\ \=\ {{{20,\ 30},{50,\ 50},{10,\ 50}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{40,\ 20},{60,\ 10},{75,\ 20},{60,\ 30}},\ \ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{45,60},{55,55},{60,60},{55,65}}};\r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ flights2\ \=\ {{{0,\ 30,\ 20},{78,\ 70,\ 5}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{55,\ 0,\ 20},\ {10,\ 60,\ 10}}};\r\n\r\n\ \ \ \ \ \ \ \ IceepeeceeContest\ solver2\ \=\ new\ IceepeeceeContest();\r\n\r\n\ \ \ \ \ \ \ \ solver2.simulate(islands2,\ flights2);\r\n\r\n\ \ \ \ \ \ \ \ String[]\ observedIslands2\ \=\ solver2.simulator.observedIslands();\r\n\r\n\ \ \ \ \ \ \ \ assertArrayEquals(observedIslands1,\ observedIslands2);\r\n\r\n}
comment10.params=
comment10.target=void\ accordingFMShouldGetACorrectMinAngle3()
comment11.params=
comment11.target=void\ accordingFMShouldGetACorrectMinAngle4()
comment12.params=
comment12.target=void\ accordingFMShouldGetACorrectMinAngle6()
comment13.params=
comment13.target=void\ accordingCMShouldSolveWithExampleInput3()
comment14.params=
comment14.target=void\ accordingCMShouldNotSolveTheProblem()
comment15.params=
comment15.target=void\ solveInput1MaratonChicuazuqueSierra()
comment16.params=
comment16.target=void\ solveInput2MaratonChicuazuqueSierra()
comment17.params=
comment17.target=void\ accordingGSshouldSolveTheMaratonProblem()
comment18.params=
comment18.target=void\ accordingGSshouldReturnValidAngleValue()
comment19.params=
comment19.target=void\ accordingGSshouldnotSolveEmptyIslandsArrayItCountsItAsImpossibleReturningMinusOne()
comment2.params=
comment2.target=void\ testSolveNotShould()
comment20.params=
comment20.target=void\ accordingDMShouldSolve()
comment21.params=
comment21.target=void\ accordingDMShouldNotSolve()
comment22.params=
comment22.target=void\ shouldSimulate2()
comment23.params=
comment23.target=void\ shouldGetACorrectMinAngl2e()
comment24.params=
comment24.target=void\ testSolveShould2()
comment24.text=@Test\r\n\r\n\ \ \ \ \r\n\r\n\ \ \ \ public\ void\ simulateShould()\ {\r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ islands\ \=\ {{{20,\ 30},{50,\ 50},{10,\ 50}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{40,\ 20},{60,\ 10},{75,\ 20},{60,\ 30}},\ \ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{45,60},{55,55},{60,60},{55,65}}};\r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ flights\ \=\ {{{0,\ 30,\ 20},{78,\ 70,\ 5}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{55,\ 0,\ 20},\ {10,\ 60,\ 10}}};\r\n\r\n\ \ \ \ \ \ \ \ IceepeeceeContest\ solver\ \=\ new\ IceepeeceeContest();\r\n\r\n\ \ \ \ \ \ \ \ solver.simulate(islands,\ flights);\r\n\r\n\ \ \ \ \ \ \ \ String[]\ observedIslands1\ \=\ solver.simulator.observedIslands();\r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ islands2\ \=\ {{{20,\ 30},{50,\ 50},{10,\ 50}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{40,\ 20},{60,\ 10},{75,\ 20},{60,\ 30}},\ \ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{45,60},{55,55},{60,60},{55,65}}};\ \ \r\n\r\n\ \ \ \ \ \ \ \ int[][][]\ flights2\ \=\ {{{0,\ 30,\ 20},{78,\ 70,\ 5}},\ \r\n\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {{55,\ 0,\ 20},\ {10,\ 60,\ 10}}};\r\n\r\n\ \ \ \ \ \ \ \ IceepeeceeContest\ solver2\ \=\ new\ IceepeeceeContest();\r\n\r\n\ \ \ \ \ \ \ \ solver2.simulate(islands2,\ flights2);\r\n\r\n\ \ \ \ \ \ \ \ String[]\ observedIslands2\ \=\ solver2.simulator.observedIslands();\r\n\r\n\ \ \ \ \ \ \ \ assertEquals(observedIslands1.length,\ observedIslands2.length);\r\n\r\n\ \ \ \ \r\n\r\n}
comment25.params=
comment25.target=void\ testSolveNotShould3()
comment26.params=
comment26.target=void\ testSimulateShould4()
comment27.params=
comment27.target=void\ testSolveShouldReturnAngle2()
comment28.params=
comment28.target=void\ shouldSimulate3()
comment29.params=
comment29.target=void\ shouldNotSimulate()
comment3.params=
comment3.target=void\ testSimulateShould()
comment30.params=
comment30.target=void\ shouldGetACorrectMinAngle2()
comment31.params=
comment31.target=void\ shouldNotSolve()
comment32.params=
comment32.target=void\ shouldSimulate4()
comment33.params=
comment33.target=void\ shouldnotSimulate2()
comment34.params=
comment34.target=void\ shouldGetACorrectMinAngle4()
comment35.params=
comment35.target=void\ testSolveNotShould2()
comment36.params=
comment36.target=void\ testSolvePass()
comment37.params=
comment37.target=void\ testSolveFail()
comment38.params=
comment38.target=void\ ShouldFunctionSimulateAchuri_Gil()
comment39.params=
comment39.target=void\ notShouldFunctionSimulateAchuri_Gil()
comment4.params=
comment4.target=void\ testSolveShouldReturnAngle()
comment40.params=
comment40.target=void\ ShouldFunctionGetACorrectMinAngleAchuri_Gil()
comment41.params=
comment41.target=void\ ShouldFunctionGetACorrectMinAngle2Achuri_Gil()
comment42.params=
comment42.target=void\ notShouldFunctionSolveAchuri_Gil()
comment43.params=
comment43.target=void\ ShouldFunctionSolveCorrectlyAchuri_Gil()
comment44.params=
comment44.target=void\ notShouldFunctionSolveAtAllAchuri_Gil()
comment5.params=
comment5.target=void\ shouldSimulate()
comment6.params=
comment6.target=void\ shouldnotSimulate()
comment7.params=
comment7.target=void\ shouldGetACorrectMinAngle()
comment8.params=
comment8.target=void\ accordingLPShouldTakeTheSmallestAngle()
comment9.params=
comment9.target=void\ accordingLPShouldNotTakeTheSmallestAngle()
numComments=45
